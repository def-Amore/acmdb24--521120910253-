jhw@ubuntu:~/WorkSpace/JavaPrograms/acmdb-lab1/acmdb-lab1$ ant test
Buildfile: /home/jhw/WorkSpace/JavaPrograms/acmdb-lab1/acmdb-lab1/build.xml

compile:

testcompile:
   [depend] Deleted 2 out of date files in 0 seconds
    [javac] Compiling 5 source files to /home/jhw/WorkSpace/JavaPrograms/acmdb-lab1/acmdb-lab1/bin/test

test:
    [junit] Running simpledb.AggregateTest
    [junit] Testsuite: simpledb.AggregateTest
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
    [junit] 
    [junit] Testcase: getTupleDesc took 0.027 sec
    [junit] Testcase: countStringAggregate took 0.004 sec
    [junit] Testcase: avgAggregate took 0.006 sec
    [junit] Testcase: maxAggregate took 0.002 sec
    [junit] Testcase: minAggregate took 0.001 sec
    [junit] Testcase: sumStringGroupBy took 0.002 sec
    [junit] Testcase: sumAggregate took 0 sec
    [junit] Testcase: rewind took 0.001 sec
    [junit] Running simpledb.BTreeFileDeleteTest
    [junit] Testsuite: simpledb.BTreeFileDeleteTest
    [junit] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.703 sec
    [junit] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.703 sec
    [junit] 
    [junit] Testcase: deleteTuple took 0.173 sec
    [junit] Testcase: testStealFromRightLeafPage took 0.048 sec
    [junit] Testcase: testMergeLeafPages took 0.076 sec
    [junit] Testcase: testStealFromLeftInternalPage took 0.5 sec
    [junit] Testcase: testStealFromRightInternalPage took 0.323 sec
    [junit] Testcase: testMergeInternalPages took 0.53 sec
    [junit] Testcase: testStealFromLeftLeafPage took 0.016 sec
    [junit] Running simpledb.BTreeFileInsertTest
    [junit] Testsuite: simpledb.BTreeFileInsertTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.528 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.528 sec
    [junit] 
    [junit] Testcase: testSplitLeafPages took 0.113 sec
    [junit] Testcase: testSplitInternalPages took 0.379 sec
    [junit] Testcase: testReusePage took 0.013 sec
    [junit] Running simpledb.BTreeFileReadTest
    [junit] Testsuite: simpledb.BTreeFileReadTest
    [junit] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.297 sec
    [junit] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.297 sec
    [junit] 
    [junit] Testcase: testIteratorBasic took 0.11 sec
    [junit] Testcase: testIteratorClose took 0.064 sec
    [junit] Testcase: getTupleDesc took 0.009 sec
    [junit] Testcase: numPages took 0.011 sec
    [junit] Testcase: readPage took 0.01 sec
    [junit] Testcase: indexIterator took 0.038 sec
    [junit] Testcase: getId took 0.019 sec
    [junit] Running simpledb.BTreeHeaderPageTest
    [junit] Testsuite: simpledb.BTreeHeaderPageTest
    [junit] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.119 sec
    [junit] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.119 sec
    [junit] 
    [junit] Testcase: getId took 0.052 sec
    [junit] Testcase: getSlot took 0.007 sec
    [junit] Testcase: getNextPageId took 0.002 sec
    [junit] Testcase: setPrevPageId took 0.001 sec
    [junit] Testcase: getPageData took 0.006 sec
    [junit] Testcase: testDirty took 0.001 sec
    [junit] Testcase: setNextPageId took 0.002 sec
    [junit] Testcase: numSlots took 0.001 sec
    [junit] Testcase: getEmptySlot took 0.006 sec
    [junit] Testcase: getPrevPageId took 0.002 sec
    [junit] Running simpledb.BTreeInternalPageTest
    [junit] Testsuite: simpledb.BTreeInternalPageTest
    [junit] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.293 sec
    [junit] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.293 sec
    [junit] 
    [junit] Testcase: getId took 0.05 sec
    [junit] Testcase: addEntry took 0.184 sec
    [junit] Testcase: getSlot took 0.002 sec
    [junit] Testcase: testReverseIterator took 0.006 sec
    [junit] Testcase: getParentId took 0.003 sec
    [junit] Testcase: setParentId took 0.002 sec
    [junit] Testcase: getNumEmptySlots took 0.001 sec
    [junit] Testcase: testDirty took 0.002 sec
    [junit] Testcase: testIterator took 0.003 sec
    [junit] Testcase: deleteNonexistentEntry took 0.002 sec
    [junit] Testcase: deleteEntry took 0.002 sec
    [junit] Running simpledb.BTreeLeafPageTest
    [junit] Testsuite: simpledb.BTreeLeafPageTest
    [junit] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.212 sec
    [junit] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.212 sec
    [junit] 
    [junit] Testcase: getRightSiblingId took 0.056 sec
    [junit] Testcase: getNumEmptySlots took 0.003 sec
    [junit] Testcase: testDirty took 0.003 sec
    [junit] Testcase: addTuple took 0.083 sec
    [junit] Testcase: setRightSiblingId took 0.002 sec
    [junit] Testcase: getParentId took 0.003 sec
    [junit] Testcase: getLeftSiblingId took 0.002 sec
    [junit] Testcase: setParentId took 0.002 sec
    [junit] Testcase: setLeftSiblingId took 0.002 sec
    [junit] Testcase: testIterator took 0.003 sec
    [junit] Testcase: deleteNonexistentTuple took 0.002 sec
    [junit] Testcase: deleteTuple took 0.002 sec
    [junit] Testcase: getId took 0.002 sec
    [junit] Testcase: getSlot took 0.002 sec
    [junit] Running simpledb.BTreePageIdTest
    [junit] Testsuite: simpledb.BTreePageIdTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
    [junit] 
    [junit] Testcase: getTableId took 0.009 sec
    [junit] Testcase: pageno took 0 sec
    [junit] Testcase: testHashCode took 0.001 sec
    [junit] Testcase: equals took 0.001 sec
    [junit] Running simpledb.BTreeRootPtrPageTest
    [junit] Testsuite: simpledb.BTreeRootPtrPageTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 sec
    [junit] 
    [junit] Testcase: getId took 0.045 sec
    [junit] Testcase: getHeaderId took 0.001 sec
    [junit] Testcase: setHeaderId took 0.001 sec
    [junit] Testcase: testDirty took 0.001 sec
    [junit] Testcase: getRootId took 0.001 sec
    [junit] Testcase: setRootId took 0 sec
    [junit] Running simpledb.BufferPoolWriteTest
    [junit] Testsuite: simpledb.BufferPoolWriteTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.278 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.278 sec
    [junit] 
    [junit] Testcase: insertTuple took 0.136 sec
    [junit] Testcase: handleManyDirtyPages took 0.027 sec
    [junit] Testcase: deleteTuple took 0.087 sec
    [junit] Running simpledb.CatalogTest
    [junit] Testsuite: simpledb.CatalogTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
    [junit] 
    [junit] Testcase: handleDuplicateNames took 0.013 sec
    [junit] Testcase: getTableId took 0.001 sec
    [junit] Testcase: handleDuplicateIds took 0.001 sec
    [junit] Testcase: getTupleDesc took 0 sec
    [junit] Testcase: getDatabaseFile took 0.001 sec
    [junit] Running simpledb.FilterTest
    [junit] Testsuite: simpledb.FilterTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
    [junit] 
    [junit] Testcase: getTupleDesc took 0.017 sec
    [junit] Testcase: filterAllLessThan took 0.002 sec
    [junit] Testcase: filterEqualNoTuples took 0.001 sec
    [junit] Testcase: filterSomeLessThan took 0.002 sec
    [junit] Testcase: filterEqual took 0.003 sec
    [junit] Testcase: rewind took 0.002 sec
    [junit] Running simpledb.HashEquiJoinTest
    [junit] Testsuite: simpledb.HashEquiJoinTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.262 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.262 sec
    [junit] ------------- Standard Output ---------------
    [junit] JOIN PRODUCED 300010 ROWS
    [junit] JOIN PRODUCED 300010 ROWS
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: eqJoin took 0.021 sec
    [junit] Testcase: getTupleDesc took 0.001 sec
    [junit] Testcase: bigJoin took 1.213 sec
    [junit] Running simpledb.HeapFileReadTest
    [junit] Testsuite: simpledb.HeapFileReadTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.144 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.144 sec
    [junit] 
    [junit] Testcase: getId took 0.061 sec
    [junit] Testcase: numPages took 0.004 sec
    [junit] Testcase: readPage took 0.014 sec
    [junit] Testcase: testIteratorBasic took 0.008 sec
    [junit] Testcase: testIteratorClose took 0.022 sec
    [junit] Testcase: getTupleDesc took 0.003 sec
    [junit] Running simpledb.HeapFileWriteTest
    [junit] Testsuite: simpledb.HeapFileWriteTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.167 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.167 sec
    [junit] 
    [junit] Testcase: addTuple took 0.146 sec
    [junit] Running simpledb.HeapPageIdTest
    [junit] Testsuite: simpledb.HeapPageIdTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
    [junit] 
    [junit] Testcase: equals took 0.009 sec
    [junit] Testcase: pageno took 0 sec
    [junit] Testcase: getTableId took 0 sec
    [junit] Testcase: testHashCode took 0 sec
    [junit] Running simpledb.HeapPageReadTest
    [junit] Testsuite: simpledb.HeapPageReadTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.07 sec
    [junit] 
    [junit] Testcase: getId took 0.028 sec
    [junit] Testcase: getSlot took 0.004 sec
    [junit] Testcase: testIterator took 0.003 sec
    [junit] Testcase: getNumEmptySlots took 0.003 sec
    [junit] Running simpledb.HeapPageWriteTest
    [junit] Testsuite: simpledb.HeapPageWriteTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.164 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.164 sec
    [junit] 
    [junit] Testcase: testDirty took 0.068 sec
    [junit] Testcase: deleteNonexistentTuple took 0.003 sec
    [junit] Testcase: addTuple took 0.063 sec
    [junit] Testcase: deleteTuple took 0.002 sec
    [junit] Running simpledb.InsertTest
    [junit] Testsuite: simpledb.InsertTest
    [junit] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
    [junit] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
    [junit] 
    [junit] Testcase: getTupleDesc took 0.073 sec
    [junit] Testcase: getNext took 0.01 sec
    [junit] Running simpledb.IntHistogramTest
    [junit] Testsuite: simpledb.IntHistogramTest
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.29 sec
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.29 sec
    [junit] 
    [junit] Testcase: opGreaterThanTest took 0.006 sec
    [junit] Testcase: opGreaterThanOrEqualsTest took 0 sec
    [junit] Testcase: opEqualsTest took 0 sec
    [junit] Testcase: opLessThanOrEqualsTest took 0.001 sec
    [junit] Testcase: negativeRangeTest took 0 sec
    [junit] Testcase: opLessThanTest took 0.001 sec
    [junit] Testcase: orderOfGrowthTest took 0.247 sec
    [junit] Testcase: opNotEqualsTest took 0.001 sec
    [junit] Running simpledb.IntegerAggregatorTest
    [junit] Testsuite: simpledb.IntegerAggregatorTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
    [junit] 
    [junit] Testcase: mergeMin took 0.022 sec
    [junit] Testcase: mergeSum took 0.001 sec
    [junit] Testcase: mergeMax took 0.001 sec
    [junit] Testcase: mergeAvg took 0.001 sec
    [junit] Testcase: testIterator took 0.001 sec
    [junit] Running simpledb.JoinOptimizerTest
    [junit] Testsuite: simpledb.JoinOptimizerTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.847 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.847 sec
    [junit] ------------- Standard Output ---------------
    [junit] tableId1: 853839519
    [junit] tableId2: 1644458291
    [junit] Added scan of table t1
    [junit] Added scan of table t2
    [junit] Added join between t1.c1 and t2.c2
    [junit] Added select list field null.*
    [junit] Added scan of table t1
    [junit] Added scan of table t2
    [junit] Added join between t1.c1 and t2.c2
    [junit] Added select list field null.*
    [junit] Added scan of table t1
    [junit] Added scan of table t2
    [junit] Added join between t1.c3 and t2.c4
    [junit] Added select list field null.*
    [junit] Added scan of table t1
    [junit] Added scan of table t2
    [junit] Added join between t1.c8 and t2.c7
    [junit] Added select list field null.*
    [junit] tableId1: 469375826
    [junit] tableId2: -2085955323
    [junit] Added scan of table t1
    [junit] Added scan of table t2
    [junit] Added join between t1.c8 and t2.c7
    [junit] Added select list field null.*
    [junit] tableId1: 1900798261
    [junit] tableId2: -1627300508
    [junit] Added scan of table emp
    [junit] Added scan of table dept
    [junit] Added scan of table hobbies
    [junit] Added scan of table hobby
    [junit] Added join between emp.c1 and dept.c0
    [junit] Added join between hobbies.c0 and emp.c2
    [junit] Added join between hobbies.c1 and hobby.c0
    [junit] Added select list field null.*
    [junit] tableId1: 1105581370
    [junit] tableId2: -2106576192
    [junit] Added scan of table bigTable
    [junit] Added scan of table a
    [junit] Added scan of table b
    [junit] Added scan of table c
    [junit] Added scan of table d
    [junit] Added scan of table e
    [junit] Added scan of table f
    [junit] Added scan of table g
    [junit] Added scan of table h
    [junit] Added scan of table i
    [junit] Added scan of table j
    [junit] Added scan of table k
    [junit] Added scan of table l
    [junit] Added scan of table m
    [junit] Added scan of table n
    [junit] Added join between bigTable.c0 and n.c0
    [junit] Added join between a.c1 and b.c1
    [junit] Added join between b.c0 and c.c0
    [junit] Added join between c.c1 and d.c1
    [junit] Added join between d.c0 and e.c0
    [junit] Added join between e.c1 and f.c1
    [junit] Added join between f.c0 and g.c0
    [junit] Added join between g.c1 and h.c1
    [junit] Added join between h.c0 and i.c0
    [junit] Added join between i.c1 and j.c1
    [junit] Added join between j.c0 and k.c0
    [junit] Added join between k.c1 and l.c1
    [junit] Added join between l.c0 and m.c0
    [junit] Added join between m.c1 and n.c1
    [junit] Aggregate field is a.c0, agg fun is : COUNT
    [junit] Added select list field a.c0
    [junit] 	 with aggregator COUNT
    [junit] tableId1: -2128938069
    [junit] tableId2: 1320290869
    [junit] Added scan of table a
    [junit] Added scan of table b
    [junit] Added scan of table c
    [junit] Added scan of table d
    [junit] Added scan of table e
    [junit] Added scan of table f
    [junit] Added scan of table g
    [junit] Added scan of table h
    [junit] Added scan of table i
    [junit] Added join between a.c1 and b.c1
    [junit] Added join between b.c0 and c.c0
    [junit] Added join between c.c1 and d.c1
    [junit] Added join between d.c0 and e.c0
    [junit] Added join between e.c1 and f.c1
    [junit] Added join between f.c0 and g.c0
    [junit] Added join between g.c1 and h.c1
    [junit] Added join between h.c0 and i.c0
    [junit] Aggregate field is a.c0, agg fun is : COUNT
    [junit] Added select list field a.c0
    [junit] 	 with aggregator COUNT
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: estimateJoinCostTest took 0.59 sec
    [junit] Testcase: estimateJoinCardinality took 0.319 sec
    [junit] Testcase: orderJoinsTest took 3.989 sec
    [junit] Testcase: bigOrderJoinsTest took 15.646 sec
    [junit] Testcase: nonequalityOrderJoinsTest took 0.273 sec
    [junit] Running simpledb.JoinPredicateTest
    [junit] Testsuite: simpledb.JoinPredicateTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 sec
    [junit] 
    [junit] Testcase: filterVaryingVals took 0.022 sec
    [junit] Running simpledb.JoinTest
    [junit] Testsuite: simpledb.JoinTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.057 sec
    [junit] 
    [junit] Testcase: rewind took 0.025 sec
    [junit] Testcase: getTupleDesc took 0.002 sec
    [junit] Testcase: eqJoin took 0.003 sec
    [junit] Testcase: gtJoin took 0.003 sec
    [junit] Running simpledb.PredicateTest
    [junit] Testsuite: simpledb.PredicateTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 sec
    [junit] 
    [junit] Testcase: filter took 0.016 sec
    [junit] Running simpledb.RecordIdTest
    [junit] Testsuite: simpledb.RecordIdTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 sec
    [junit] 
    [junit] Testcase: equals took 0.012 sec
    [junit] Testcase: hCode took 0.001 sec
    [junit] Testcase: getPageId took 0.001 sec
    [junit] Testcase: tupleno took 0 sec
    [junit] Running simpledb.StringAggregatorTest
    [junit] Testsuite: simpledb.StringAggregatorTest
    [junit] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
    [junit] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec
    [junit] 
    [junit] Testcase: mergeCount took 0.022 sec
    [junit] Testcase: testIterator took 0.001 sec
    [junit] Running simpledb.TableStatsTest
    [junit] Testsuite: simpledb.TableStatsTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.362 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.362 sec
    [junit] 
    [junit] Testcase: estimateScanCostTest took 3.808 sec
    [junit] Testcase: estimateTableCardinalityTest took 0.33 sec
    [junit] Testcase: estimateSelectivityTest took 0.2 sec
    [junit] Running simpledb.TupleDescTest
    [junit] Testsuite: simpledb.TupleDescTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.109 sec
    [junit] 
    [junit] Testcase: nameToId took 0.06 sec
    [junit] Testcase: numFields took 0.004 sec
    [junit] Testcase: testEquals took 0.001 sec
    [junit] Testcase: combine took 0 sec
    [junit] Testcase: getType took 0.005 sec
    [junit] Testcase: getSize took 0.005 sec
    [junit] Running simpledb.TupleTest
    [junit] Testsuite: simpledb.TupleTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
    [junit] 
    [junit] Testcase: modifyRecordId took 0.016 sec
    [junit] Testcase: modifyFields took 0.001 sec
    [junit] Testcase: getTupleDesc took 0.001 sec

BUILD SUCCESSFUL
Total time: 49 seconds
jhw@ubuntu:~/WorkSpace/JavaPrograms/acmdb-lab1/acmdb-lab1$ ant systemtest
Buildfile: /home/jhw/WorkSpace/JavaPrograms/acmdb-lab1/acmdb-lab1/build.xml

compile:

testcompile:

systemtest:
    [junit] Running simpledb.systemtest.AggregateTest
    [junit] Testsuite: simpledb.systemtest.AggregateTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.208 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.208 sec
    [junit]
    [junit] Testcase: testSum took 0.107 sec
    [junit] Testcase: testMin took 0.017 sec
    [junit] Testcase: testMax took 0.013 sec
    [junit] Testcase: testCount took 0.011 sec
    [junit] Testcase: testAverage took 0.006 sec
    [junit] Testcase: testAverageNoGroup took 0.014 sec
    [junit] Running simpledb.systemtest.BTreeFileDeleteTest
    [junit] Testsuite: simpledb.systemtest.BTreeFileDeleteTest
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.816 sec
    [junit] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.816 sec
    [junit]
    [junit] Testcase: testDeleteRootPage took 0.152 sec
    [junit] Testcase: testReuseDeletedPages took 0.119 sec
    [junit] Testcase: testRedistributeInternalPages took 10.729 sec
    [junit] Testcase: testRedistributeLeafPages took 0.018 sec
    [junit] Testcase: testMergeLeafPages took 0.013 sec
    [junit] Testcase: testDeleteInternalPages took 0.759 sec
    [junit] Running simpledb.systemtest.BTreeFileInsertTest
    [junit] Testsuite: simpledb.systemtest.BTreeFileInsertTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.701 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.701 sec
    [junit]
    [junit] Testcase: testSplitLeafPage took 0.122 sec
    [junit] Testcase: testSplitRootPage took 9.644 sec
    [junit] Testcase: testSplitInternalPage took 0.481 sec
    [junit] Testcase: addTuple took 0.068 sec
    [junit] Testcase: addDuplicateTuples took 0.357 sec
    [junit] Running simpledb.systemtest.BTreeScanTest
    [junit] Testsuite: simpledb.systemtest.BTreeScanTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.575 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.575 sec
    [junit]
    [junit] Testcase: testRewindPredicates took 0.17 sec
    [junit] Testcase: testRewind took 0.03 sec
    [junit] Testcase: testReadPage took 0.278 sec
    [junit] Testcase: testSmall took 2.07 sec
    [junit] Running simpledb.systemtest.DeleteTest
    [junit] Testsuite: simpledb.systemtest.DeleteTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.3 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.3 sec
    [junit]
    [junit] Testcase: testEquals took 0.147 sec
    [junit] Testcase: testLessThan took 0.035 sec
    [junit] Testcase: testLessThanOrEq took 0.023 sec
    [junit] Testcase: testGreaterThan took 0.038 sec
    [junit] Testcase: testGreaterThanOrEq took 0.032 sec
    [junit] Running simpledb.systemtest.EvictionTest
    [junit] Testsuite: simpledb.systemtest.EvictionTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.576 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.576 sec
    [junit] ------------- Standard Output ---------------
    [junit] EvictionTest creating large table
    [junit] EvictionTest scanning large table
    [junit] EvictionTest scan complete, testing memory usage of scan
    [junit] ------------- ---------------- ---------------
    [junit]
    [junit] Testcase: testHeapFileScanWithManyPages took 2.557 sec
    [junit] Running simpledb.systemtest.FilterTest
    [junit] Testsuite: simpledb.systemtest.FilterTest
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.272 sec
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.272 sec
    [junit]
    [junit] Testcase: testEquals took 0.127 sec
    [junit] Testcase: testLessThan took 0.035 sec
    [junit] Testcase: testLessThanOrEq took 0.027 sec
    [junit] Testcase: testGreaterThan took 0.028 sec
    [junit] Testcase: testGreaterThanOrEq took 0.024 sec
    [junit] Running simpledb.systemtest.HashEquiJoinTest
    [junit] Testsuite: simpledb.systemtest.HashEquiJoinTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.106 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.106 sec
    [junit]
    [junit] Testcase: testNoMatch took 0.068 sec
    [junit] Testcase: testMultipleMatch took 0.009 sec
    [junit] Testcase: testSingleMatch took 0.008 sec
    [junit] Running simpledb.systemtest.InsertTest
    [junit] Testsuite: simpledb.systemtest.InsertTest
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec
    [junit] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.115 sec
    [junit]
    [junit] Testcase: testEmptyToOne took 0.069 sec
    [junit] Testcase: testOneToEmpty took 0.009 sec
    [junit] Testcase: testOneToOne took 0.008 sec
    [junit] Testcase: testEmptyToEmpty took 0.004 sec
    [junit] Running simpledb.systemtest.JoinTest
    [junit] Testsuite: simpledb.systemtest.JoinTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.1 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.1 sec
    [junit]
    [junit] Testcase: testNoMatch took 0.061 sec
    [junit] Testcase: testMultipleMatch took 0.007 sec
    [junit] Testcase: testSingleMatch took 0.006 sec
    [junit] Running simpledb.systemtest.QueryTest
    [junit] Testsuite: simpledb.systemtest.QueryTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.465 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.465 sec
    [junit] ------------- Standard Output ---------------
    [junit] Started a new transaction tid = 5
    [junit] Added scan of table emp
    [junit] Added scan of table dept
    [junit] Added scan of table hobbies
    [junit] Added scan of table hobby
    [junit] Added join between emp.c1 and dept.c0
    [junit] Added join between hobbies.c0 and emp.c2
    [junit] Added join between hobbies.c1 and hobby.c0
    [junit] Added select list field null.*
    [junit] The query plan is:
    [junit]                                                  π(emp.c0,emp.c1,emp.c2,emp.c3,emp.c4,emp.c5,dept.c0,dept.c1,dept.c2,hobbies.c0,hobbies.c1,hobby.c0,hobby.c1,hobby.c2,hobby.c3,hobby.c4,hobby.c5),card:200000
    [junit]                                                  |
    [junit]                                                  ⨝(hobbies.c1=hobby.c0),card:200000
    [junit]                                __________________|__________________
    [junit]                                |                                   |
    [junit]                                ⨝(emp.c2=hobbies.c0),card:200000    |
    [junit]                 _______________|________________                   |
    [junit]                 |                              |                   |
    [junit]                 ⨝(emp.c1=dept.c0),card:1602    |                   |
    [junit]   ______________|______________                |                   |
    [junit]   |                           |                |                   |
    [junit]   σ(emp.c3<1000),card:1602    |                |                   |
    [junit]   |                           |              scan(hobbies)         |
    [junit] scan(emp)                   scan(dept)                           scan(hobby)
    [junit]
    [junit] emp.c0        emp.c1        emp.c2        emp.c3        emp.c4        emp.c5        dept.c0        dept.c1dept.c2        hobbies.c0        hobbies.c1        hobby.c0        hobby.c1        hobby.c2hobby.c3        hobby.c4        hobby.c5        
    [junit] ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    [junit] 51407 34722 61686 17 52307 10918 34722 16813 41411 61686 32779 32779 15815 23586 29299 37138 19805
    [junit] 61289 36483 59835 581 19571 60948 36483 20185 15070 59835 39414 39414 55713 23644 52794 2866 21912
    [junit] 23605 51590 5966 215 39269 26092 51590 31049 49589 5966 7724 7724 21145 6210 3069 4232 10184
    [junit] 32984 26487 41714 45 13259 4276 26487 23370 47548 41714 19298 19298 33763 8618 55538 53442 47840
    [junit] 32984 26487 41714 45 13259 4276 26487 31082 62492 41714 19298 19298 33763 8618 55538 53442 47840
    [junit]
    [junit]  5 rows.
    [junit] Transaction 5 committed.
    [junit] ------------- ---------------- ---------------
    [junit]
    [junit] Testcase: queryTest took 7.449 sec
    [junit] Running simpledb.systemtest.ScanTest
    [junit] Testsuite: simpledb.systemtest.ScanTest
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.948 sec
    [junit] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.948 sec
    [junit]
    [junit] Testcase: testSmall took 0.472 sec
    [junit] Testcase: testRewind took 0.005 sec
    [junit] Testcase: testCache took 0.447 sec

BUILD SUCCESSFUL
Total time: 43 seconds
